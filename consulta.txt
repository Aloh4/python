Tipos de dados:
	Int			= 1, 2, 3
	Float		= 1.1, 2.2, 3.3
	String		= 'Texto'
	Booleano	= True, False
-------------------------------------------------------
Comentários:

	# Assim comento uma linha
	''' Assim
		Comento
		várias linhas '''
-------------------------------------------------------
Verificar tipo da variável:
	type(var)
	...
-------------------------------------------------------
Alterar tipo da variável:
	var = 1
	print float(var)
	...
-------------------------------------------------------
Importar bibliotecas:

	import lib
-------------------------------------------------------
Exibir// Printar
	var1 = 192.168.0.99
	var2 = 'ASSET-EXEMPLO'

	#Exemplos:
		print 'O ip é'
		...
	# Concatenando strings
		ip = raw_input('Digite um endereco IP: ')
		print 'O endereco IP e: ' + ip + 'e um endereco valido'
	# Usando operadores
		ip = raw_input('Digite um endereco IP: ')
		print 'O endereco %s e um endereco valido' %ip
		print 'O endereco %s tem %d caracteres' %(ip,len(ip))
		print 'O endereco %s tem %d e vale exatamente %f' %(ip, int(ip), float(ip))
		print 'O endereco %s tem %d inteiros e %f floats' %(ip, len(ip), float(len(ip)))
	# Valores diretos
		print 'O endereco %s tem %d inteiros e %f floats' %('aaa', 1, 2.3)
		...
-------------------------------------------------------
Receber valores:
	input()			= Retorna valores já declarados.
	
	#Exemplo 1
		terra = 'Planeta'
		input(terra)
			output --> Planeta
	#Exemplo 2
		var = input()
		...
		print 'Digite um valor: ',var
	#Exemplo 3
		api = 'Chave secreta'
		usuario = input()
		...10030
		usuario = input()
		...api
		output --> api
		'Chave secreta' #Agora a variável usuário contém o valor de API (vulnerável)

	raw_input()		= Recebe strings
	#Exemplo 1
		valor = raw_input()
		...'12' <- é uma string.
	#Exemplo 2
		valor = int(raw_input())
		...12 <- Agora a variável valor é um inteiro.
	#Exemplo 3
		numero = int(raw_input('Digite um valor inteiro: '))
		...numero agora é int
-------------------------------------------------------
Contar tamanho da string:
	len()

	#Exemplo 1
		len('ad63589f761a4344e930486e05')
		...output --> 26
	#Exemplo 2 
		var = 'ad63589f761a4344e930486e05'
		len(var)
		...output --> 26
		type(var)
		...output --> str
	#Exemplo 3
		# Declarar uma str
			var = 'ad63589f761a4344e930486e05'
			...
		# Usar var2 para contar var em inteiro.
			var2 = len(var)
			...
		# var permanece str
			>>> var	

-------------------------------------------------------
Usando if, else, elif:

	#Exemplo 1, apenas if
		user = raw_input('Digite o user: ')
	#Atenção a identação
	if user == 'root':
		print 'Usuario valido'

	#Exemplo 2, apenas if
		user = raw_input('Digite o user: ')
		#Atencao a identacao
		user = raw_input('Digite o user: ')
		if user == 'root':
			print 'Usuario valido'
		else:
			print 'Usuario incorreto'
	#Exemplo 3, if-elif-else
		user = raw_input('Digite o user: ')
		if user == 'root':
			print 'Usuario %s valido' %user
		elif user = 'admin':
			print 'Usuario %s valido' %user
		else:
			print 'Usuario %s incorreto' %user
-------------------------------------------------------
Usando while:

	#Exemplo 1
		contador = 0
		while contador <= 4:
		print '192.168.0.%d' %contador
		contador = contador + 1
		print 'While finalizado, contador agora vale %d' %contador
	#Exemplo 2, utilizando break.
		while True:
			user = raw_input('Digite o user: ')
			print 'O user digitado foi %s' %user
			if user == 'root':
				print 'User logado'
				break
	#Exemplo 3, utilizando continue.



-------------------------------------------------------
Usando for:
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------


